#!/usr/bin/php
<?

// ini_set( 'xdebug.profiler_enable_trigger', 0 );
// ini_set( 'xdebug.collect_params', 2 );
ini_set( 'xdebug.show_mem_delta', 1); 
xdebug_start_trace('/tmp/xpotronix-trace.xt');


ini_set( 'display_errors', 0 );
ini_set( 'log_errors', 1 );
ini_set( 'error_log', 'syslog' );

ini_set( 'include_path', ini_get( 'include_path' ). ':/usr/share/php/adodb' );

$ini = parse_ini_file( '/etc/xpotronix/xpotronix.ini', true);
require_once $ini['paths']['lib']. "xpotronize.class.php";
require_once $ini['paths']['lib']. "xpdoc.class.php";

$x = new xpotronize;
$x->check_params_xpotronize();

$xpdoc = new xpdoc( $x->config, $x->feat );
$xpdoc->db_driver( 'ADODB' );

if ( @$x->opts['f'] ) {

	M()->user( "dbdump: aplicacion {$x->feat->application}" );

	$db = new dbdump( $x->ini );
	$db->get_database_info();

	$pp = $x->transform['params']['project_path'];
	$db->output( implode( '/', array( $pp, 't.xml' ) ) );

	$y = clone $x;

	$y->argv[1] = 'beautify';

	$y->check_params_xputil();

	$y->transform['xml'] = implode( '/', array( $pp, 't.xml' ) );

	$y->transform( implode( '/', array( $pp, 'tables.xml' ) ) );

	unlink( $y->transform['xml'] );
}

M()->user( "xpotronize: aplicacion {$x->feat->application}" );

( $x->config->self === true or $x->config->self === null ) or M()->fatal( 'esta aplicacion es para ser incluida dentro de otra. No puedo transformar' );

$x->transform();

xdebug_stop_trace();

exit(0);

?>
