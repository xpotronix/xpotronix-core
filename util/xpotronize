#!/usr/bin/php
<?php

// ini_set( 'xdebug.profiler_enable_trigger', 0 );
// ini_set( 'xdebug.collect_params', 2 );
// ini_set( 'xdebug.show_mem_delta', 1); 
// xdebug_start_trace('/tmp/xpotronix-trace.xt');


//ini_set( 'display_errors', 0 );
//ini_set( 'log_errors', 1 );
//ini_set( 'error_log', 'syslog' );

//ini_set( 'include_path', ini_get( 'include_path' ). ':/usr/share/php/adodb' );

require __DIR__ . '/../vendor/autoload.php';

use Xpotronix\Doc;
use Xpotronix\Messages;
use Xpotronix\Xpotronize;
use Xpotronix\DBDump;

$ini = parse_ini_file( '/etc/xpotronix/xpotronix.ini', true);

$x = new Xpotronize;
$x->check_params_xpotronize();

$xpdoc = new Doc( $x->config, $x->feat );
$xpdoc->dbm->db_driver( 'ADODB' );

if ( @$x->opts['f'] ) {

	M()->user( "dbdump: aplicacion {$x->config->application}" );

	$db = new DBDump( $x->ini );
	$db->get_database_info();

	$project_path = $x->transform['params']['project_path'];
	$db->output( implode( '/', [ $project_path, 't.xml' ] ) );

	$y = clone $x;

	$y->argv[1] = 'beautify';

	$y->check_params_xputil();

	$y->transform['xml'] = implode( '/', [ $project_path, 't.xml' ] );

	$y->transform( implode( '/', [ $project_path, 'tables.xml' ] ) );

	unlink( $y->transform['xml'] );
}

if ( @$x->opts['d'] ) { 

	M()->user( 'opci贸n -d: s贸lo generaci贸n tables.txt, sin transformaci贸n'); 

} else {

	M()->user( "xpotronize: aplicacion {$x->config->application}" );

	( $x->config->self === true or $x->config->self === null ) 
		or M()->fatal( 'esta aplicacion es para ser incluida dentro de otra. No puedo transformar' );

	$x->transform();

	// xdebug_stop_trace();

}

?>
